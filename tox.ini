[base]
name = dir_content_diff
files = {[base]name} tests docs/source/conf.py setup.py

[tox]
envlist =
    check-packaging
    lint
    docs
    min_versions
    missing_deps
    py{39,310,311,312}
    coverage

minversion = 3.18

[testenv]
extras =
    all_comparators
    test
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:.coverage-{envname}}
    PYTEST_ADDOPTS = -m "not comparators_missing_deps"
commands =
    coverage run \
        --source={[base]name} \
        --branch \
        -m pytest \
        --basetemp={envtmpdir} \
        --html reports/pytest-{envname}.html \
        --junit-xml=reports/pytest-{envname}.xml \
        --self-contained-html \
        --durations 10 \
        --durations-min=2.0 \
        {posargs}
    coverage html -d reports/coverage-{envname}
    coverage xml -o reports/coverage-{envname}.xml
    coverage report --fail-under=100 -m

[testenv:check-packaging]
skip_install = true
deps =
    build
    twine
commands =
    python -m build -o {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[testenv:min_versions]
basepython = python3.9
deps =
    Requirements-Builder
setenv =
    COVERAGE_RCFILE=.coveragerc_min_versions
    PYTEST_ADDOPTS = -m "not comparators_missing_deps"
commands_pre =
    requirements-builder --level=min --extras=all_comparators,test -o {envtmpdir}/requirements_min.txt setup.py
    pip install -r {envtmpdir}/requirements_min.txt
    pip freeze

[testenv:missing_deps]
extras =
    pandas
    test
setenv:
    PYTEST_ADDOPTS = -m comparators_missing_deps
commands =
    pytest \
    --basetemp={envtmpdir} \
    --html reports/pytest-{envname}.html \
    --junit-xml=reports/pytest-{envname}.xml \
    --self-contained-html \
    {posargs}

[testenv:lint]
basepython = python3.9
deps =
    pre-commit
    pylint
commands =
    pre-commit run --all-files --show-diff-on-failure
    pylint -j {env:PYLINT_NPROCS:1} {[base]files}

[testenv:format]
basepython = python3.9
skip_install = true
deps =
    codespell
    pre-commit
commands =
    codespell -i 3 -x .codespellignorelines -w {[base]files} README.md CHANGELOG.md docs/source
    pre-commit run --all-files

[testenv:docs]
basepython = python3.10
changedir = docs
extras = docs
allowlist_externals =
    make
# set warnings as errors using the -W sphinx option
commands = make html SPHINXOPTS=-W

[gh-actions]
python =
  3.9: py39, lint
  3.10: py310, check-packaging
  3.11: py311, docs
  3.12: py312
